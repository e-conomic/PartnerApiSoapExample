//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace PartnerApiSoapExample.PartnerApiService {
    using System.Runtime.Serialization;
    using System;
    
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Grant", Namespace="http://schemas.datacontract.org/2004/07/SoapService.Model")]
    [System.SerializableAttribute()]
    public partial class Grant : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string AgreementGrantTokenField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int ApplicationIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTime CreatedField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int IdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTime LastUpdatedField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Collections.Generic.Dictionary<string, string> PartnerProvidedParametersField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string AgreementGrantToken {
            get {
                return this.AgreementGrantTokenField;
            }
            set {
                if ((object.ReferenceEquals(this.AgreementGrantTokenField, value) != true)) {
                    this.AgreementGrantTokenField = value;
                    this.RaisePropertyChanged("AgreementGrantToken");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int ApplicationId {
            get {
                return this.ApplicationIdField;
            }
            set {
                if ((this.ApplicationIdField.Equals(value) != true)) {
                    this.ApplicationIdField = value;
                    this.RaisePropertyChanged("ApplicationId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime Created {
            get {
                return this.CreatedField;
            }
            set {
                if ((this.CreatedField.Equals(value) != true)) {
                    this.CreatedField = value;
                    this.RaisePropertyChanged("Created");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Id {
            get {
                return this.IdField;
            }
            set {
                if ((this.IdField.Equals(value) != true)) {
                    this.IdField = value;
                    this.RaisePropertyChanged("Id");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime LastUpdated {
            get {
                return this.LastUpdatedField;
            }
            set {
                if ((this.LastUpdatedField.Equals(value) != true)) {
                    this.LastUpdatedField = value;
                    this.RaisePropertyChanged("LastUpdated");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Collections.Generic.Dictionary<string, string> PartnerProvidedParameters {
            get {
                return this.PartnerProvidedParametersField;
            }
            set {
                if ((object.ReferenceEquals(this.PartnerProvidedParametersField, value) != true)) {
                    this.PartnerProvidedParametersField = value;
                    this.RaisePropertyChanged("PartnerProvidedParameters");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Application", Namespace="http://schemas.datacontract.org/2004/07/SoapService.Model")]
    [System.SerializableAttribute()]
    public partial class Application : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int DeveloperAgreementField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int IdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string NameField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int DeveloperAgreement {
            get {
                return this.DeveloperAgreementField;
            }
            set {
                if ((this.DeveloperAgreementField.Equals(value) != true)) {
                    this.DeveloperAgreementField = value;
                    this.RaisePropertyChanged("DeveloperAgreement");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Id {
            get {
                return this.IdField;
            }
            set {
                if ((this.IdField.Equals(value) != true)) {
                    this.IdField = value;
                    this.RaisePropertyChanged("Id");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Name {
            get {
                return this.NameField;
            }
            set {
                if ((object.ReferenceEquals(this.NameField, value) != true)) {
                    this.NameField = value;
                    this.RaisePropertyChanged("Name");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="PartnerApiService.IPartnerApiService")]
    public interface IPartnerApiService {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IPartnerApiService/Grant_GetForApplicationSince", ReplyAction="http://tempuri.org/IPartnerApiService/Grant_GetForApplicationSinceResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(System.Security.Authentication.InvalidCredentialException), Action="http://tempuri.org/IPartnerApiService/Grant_GetForApplicationSinceInvalidCredenti" +
            "alExceptionFault", Name="InvalidCredentialException", Namespace="http://schemas.datacontract.org/2004/07/System.Security.Authentication")]
        PartnerApiSoapExample.PartnerApiService.Grant[] Grant_GetForApplicationSince(int applicationId, System.DateTime date);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IPartnerApiService/Grant_GetForApplicationSince", ReplyAction="http://tempuri.org/IPartnerApiService/Grant_GetForApplicationSinceResponse")]
        System.Threading.Tasks.Task<PartnerApiSoapExample.PartnerApiService.Grant[]> Grant_GetForApplicationSinceAsync(int applicationId, System.DateTime date);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IPartnerApiService/Application_GetAll", ReplyAction="http://tempuri.org/IPartnerApiService/Application_GetAllResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(System.Security.Authentication.InvalidCredentialException), Action="http://tempuri.org/IPartnerApiService/Application_GetAllInvalidCredentialExceptio" +
            "nFault", Name="InvalidCredentialException", Namespace="http://schemas.datacontract.org/2004/07/System.Security.Authentication")]
        PartnerApiSoapExample.PartnerApiService.Application[] Application_GetAll();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IPartnerApiService/Application_GetAll", ReplyAction="http://tempuri.org/IPartnerApiService/Application_GetAllResponse")]
        System.Threading.Tasks.Task<PartnerApiSoapExample.PartnerApiService.Application[]> Application_GetAllAsync();
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface IPartnerApiServiceChannel : PartnerApiSoapExample.PartnerApiService.IPartnerApiService, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class PartnerApiServiceClient : System.ServiceModel.ClientBase<PartnerApiSoapExample.PartnerApiService.IPartnerApiService>, PartnerApiSoapExample.PartnerApiService.IPartnerApiService {
        
        public PartnerApiServiceClient() {
        }
        
        public PartnerApiServiceClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public PartnerApiServiceClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public PartnerApiServiceClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public PartnerApiServiceClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public PartnerApiSoapExample.PartnerApiService.Grant[] Grant_GetForApplicationSince(int applicationId, System.DateTime date) {
            return base.Channel.Grant_GetForApplicationSince(applicationId, date);
        }
        
        public System.Threading.Tasks.Task<PartnerApiSoapExample.PartnerApiService.Grant[]> Grant_GetForApplicationSinceAsync(int applicationId, System.DateTime date) {
            return base.Channel.Grant_GetForApplicationSinceAsync(applicationId, date);
        }
        
        public PartnerApiSoapExample.PartnerApiService.Application[] Application_GetAll() {
            return base.Channel.Application_GetAll();
        }
        
        public System.Threading.Tasks.Task<PartnerApiSoapExample.PartnerApiService.Application[]> Application_GetAllAsync() {
            return base.Channel.Application_GetAllAsync();
        }
    }
}
